// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mode
double mode(NumericVector par, int x, IntegerVector yS, IntegerVector yO, NumericVector linpredS, NumericVector linpredO, NumericVector group_aux, double rho, double tau, double sigma1, double sigma2);
RcppExport SEXP _selMNAR_MI_mode(SEXP parSEXP, SEXP xSEXP, SEXP ySSEXP, SEXP yOSEXP, SEXP linpredSSEXP, SEXP linpredOSEXP, SEXP group_auxSEXP, SEXP rhoSEXP, SEXP tauSEXP, SEXP sigma1SEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type yS(ySSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type yO(yOSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type linpredS(linpredSSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type linpredO(linpredOSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type group_aux(group_auxSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma1(sigma1SEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(mode(par, x, yS, yO, linpredS, linpredO, group_aux, rho, tau, sigma1, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// loop1
double loop1(IntegerVector yS, IntegerVector yO, NumericVector linpredS, NumericVector linpredO, double rho, double tau, double sigma1, double sigma2, NumericVector w1, NumericVector a1, NumericVector group_aux, IntegerVector group, int M, NumericMatrix chol_vc_re);
RcppExport SEXP _selMNAR_MI_loop1(SEXP ySSEXP, SEXP yOSEXP, SEXP linpredSSEXP, SEXP linpredOSEXP, SEXP rhoSEXP, SEXP tauSEXP, SEXP sigma1SEXP, SEXP sigma2SEXP, SEXP w1SEXP, SEXP a1SEXP, SEXP group_auxSEXP, SEXP groupSEXP, SEXP MSEXP, SEXP chol_vc_reSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type yS(ySSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type yO(yOSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type linpredS(linpredSSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type linpredO(linpredOSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma1(sigma1SEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w1(w1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a1(a1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type group_aux(group_auxSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type group(groupSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type chol_vc_re(chol_vc_reSEXP);
    rcpp_result_gen = Rcpp::wrap(loop1(yS, yO, linpredS, linpredO, rho, tau, sigma1, sigma2, w1, a1, group_aux, group, M, chol_vc_re));
    return rcpp_result_gen;
END_RCPP
}
// mode_ord
double mode_ord(NumericVector par, int x, IntegerVector yS, IntegerVector yO, NumericVector linpredS, NumericVector linpredO, NumericVector group_aux, double rho, double tau, NumericVector z, double sigma1, double sigma2, IntegerVector levels);
RcppExport SEXP _selMNAR_MI_mode_ord(SEXP parSEXP, SEXP xSEXP, SEXP ySSEXP, SEXP yOSEXP, SEXP linpredSSEXP, SEXP linpredOSEXP, SEXP group_auxSEXP, SEXP rhoSEXP, SEXP tauSEXP, SEXP zSEXP, SEXP sigma1SEXP, SEXP sigma2SEXP, SEXP levelsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type yS(ySSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type yO(yOSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type linpredS(linpredSSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type linpredO(linpredOSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type group_aux(group_auxSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type sigma1(sigma1SEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type levels(levelsSEXP);
    rcpp_result_gen = Rcpp::wrap(mode_ord(par, x, yS, yO, linpredS, linpredO, group_aux, rho, tau, z, sigma1, sigma2, levels));
    return rcpp_result_gen;
END_RCPP
}
// loop1_ord
double loop1_ord(IntegerVector yS, IntegerVector yO, NumericVector linpredS, NumericVector linpredO, double rho, double tau, double sigma1, double sigma2, NumericVector z, IntegerVector levels, NumericVector w1, NumericVector a1, NumericVector group_aux, IntegerVector group, int M, NumericMatrix chol_vc_re);
RcppExport SEXP _selMNAR_MI_loop1_ord(SEXP ySSEXP, SEXP yOSEXP, SEXP linpredSSEXP, SEXP linpredOSEXP, SEXP rhoSEXP, SEXP tauSEXP, SEXP sigma1SEXP, SEXP sigma2SEXP, SEXP zSEXP, SEXP levelsSEXP, SEXP w1SEXP, SEXP a1SEXP, SEXP group_auxSEXP, SEXP groupSEXP, SEXP MSEXP, SEXP chol_vc_reSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type yS(ySSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type yO(yOSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type linpredS(linpredSSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type linpredO(linpredOSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma1(sigma1SEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type levels(levelsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w1(w1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a1(a1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type group_aux(group_auxSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type group(groupSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type chol_vc_re(chol_vc_reSEXP);
    rcpp_result_gen = Rcpp::wrap(loop1_ord(yS, yO, linpredS, linpredO, rho, tau, sigma1, sigma2, z, levels, w1, a1, group_aux, group, M, chol_vc_re));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_selMNAR_MI_mode", (DL_FUNC) &_selMNAR_MI_mode, 11},
    {"_selMNAR_MI_loop1", (DL_FUNC) &_selMNAR_MI_loop1, 14},
    {"_selMNAR_MI_mode_ord", (DL_FUNC) &_selMNAR_MI_mode_ord, 13},
    {"_selMNAR_MI_loop1_ord", (DL_FUNC) &_selMNAR_MI_loop1_ord, 16},
    {NULL, NULL, 0}
};

RcppExport void R_init_selMNAR_MI(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
